@model LibraryManagementSystem.Models.tblstudents

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_navNotLogin.cshtml";
}

<script type="text/javascript">
    function valid() {
        if (document.signup.password.value != document.signup.confirmpassword.value) {
            alert("Password and Confirm Password Field do not match  !!");
            document.signup.confirmpassword.focus();
            return false;
        }
        return true;
    }
</script>
<script>
    function checkAvailability() {
        $("#loaderIcon").show();
        jQuery.ajax({
            url: "check_availability.php",
            data: 'emailid=' + $("#emailid").val(),
            type: "POST",
            success: function (data) {
                $("#user-availability-status").html(data);
                $("#loaderIcon").hide();
            },
            error: function () { }
        });
    }
</script>

<div class="content-wrapper">
    <div class="container">
        <div class="row pad-botm">
            <div class="col-md-12">
                <h4 class="header-line">User Signup</h4>

            </div>

        </div>
        <div class="row">

            <div class="col-md-9 col-md-offset-1">
                <div class="panel panel-danger">
                    <div class="panel-heading">
                        SINGUP FORM
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { onsubmit = "return valid();" }))
                        {
                            @Html.AntiForgeryToken()


                            <div class="form-group">
                                @Html.Label("Enter ID")

                                @Html.EditorFor(model => model.StudentId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.Label("Enter Full Name")

                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", name = "fullanme", autocomplete = "off", required = "required" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Mobile Number :")

                                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", name = "mobileno", maxlength = "10", autocomplete = "off", required = "reqired" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.Label("Enter Email")

                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", name = "email", id = "emailid", onBlur = "checkAvailability()", autocomplete = "off", required = "required" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.Label("Enter Password")

                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", name = "password", autocomplete = "off", required = "required" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.Label("Confirm Password")

                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", name = "confirmpassword", autocomplete = "off", required = "required" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                            </div>
                      



                            <input type="submit" value="Register Now" class="btn btn-danger" />



                        }

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

